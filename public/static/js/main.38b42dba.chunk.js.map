{"version":3,"sources":["JobCard.js","Login.js","JobList.js","CompanyLogin.js","SignInWall.js","Job.js","Header.js","JobItem.js","Members.js","JobForm.js","SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["JobCard","job","id","name","location","level","salary","featured","languages","contract","posted_at","tags","classes","className","to","aria-hidden","map","tag","Login","onLogin","useState","setName","password","setPassword","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","company","htmlFor","type","autoComplete","value","onChange","target","JobList","jobs","setJobs","useEffect","data","CompanyLogin","setCompany","response","ok","SignInWall","initialState","error","status","Job","setState","useParams","message","companys","exact","Header","onLogout","onClick","JobItem","Members","Wrapper","styled","section","FormGroup","div","SubmitButton","button","JobForm","formData","setFormData","handleChange","checked","newJob","console","log","SignUp","passwordConfirmation","setPasswordConfirmation","password_confirmation","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.38b42dba.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom';\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport { Button } from \"@blueprintjs/core\";\n\nfunction JobCard({job}) {\n    const {\n        id,\n        name,\n        location,\n        level,\n        salary,\n        featured,\n        languages,\n        contract,\n        posted_at\n    } = job\n\n    const tags = [level, ...languages];\n\n\n    const classes = {\n        wrapper:\n            \"w-10/12 max-w-6xl flex flex-col lg:flex-row justify-between item-start lg:items-center gap-4 p-6 lg:p-9 rounded bg-white shadow-cyan\",\n        info: \"flex flex-col lg:flex-row items-start lg:items-center border-b lg:border-0 gap-6 pb-4 lg:pb-0\",\n        image: \"w-12 lg:w-auto absolute lg:static transform -translate-y-12 lg:translate-y-0\",\n        details: \"flex gap-2 lg:gap-4 text-sm lg:text-base text-gray-400\",\n        tags: \"flex gap-4 flex-wrap\",\n        name: \"flex items-center text-sm font-bold text-cyan-default pt-4\",\n        position: \"text-cyan-verydark text-base lg:text-lg font-bold pt-2 pb-1\",\n        tag: \"bg-cyan-light hover:text-white hover:bg-cyan-default text-cyan-default px-2 pt-2 pb-1 rounded text-sm font-bold\",\n        new: \"bg-cyan-default text-white rounded-full px-2 pt-1.5 pb-0.5 text-xs uppercase font-normal ml-4 mr-2\",\n        featuredFlag:\n            \"bg-cyan-verydark text-white rounded-full px-2 pt-1.5 pb-0.5 text-xs uppercase font-normal\",\n        featuredJob: \"border-l-4 border-cyan-default pl-5 lg:pl-8\",\n    };\n\n  return (\n    <div className={`${classes.wrapper}}${\n        featured ? classes.featuredJob : \"\" }`}>\n       <Link to={`jobs/${id}`}>\n         <div className={'bp4-card bp4-elevation-0 bp4-interactive'}>\n           <div className={classes.name}>\n            <h2>\n                <Link to={`jobs/${id}`}>{name}</Link>\n                </h2>\n             {featured && (\n                <span className={classes.featuredFlag}>\n                    Featured\n                </span>\n             )}\n           </div>\n          \n            <div className={classes.details}>\n              <h3>{posted_at}</h3>\n              <span aria-hidden=\"true\">&#8226;</span>\n              <h3>{contract}</h3>\n              <span aria-hidden=\"true\">&#8226;</span>\n              <h3>{location}</h3>\n              <span aria-hidden=\"true\">&#8226;</span>\n              <h3>{salary}</h3>\n            </div>\n       \n            \n            <div className={classes.tags}>\n                {tags.map(tag => (\n                        <button\n                            className={classes.tag}>\n                            {tag}\n                        </button>\n                ))}\n            </div>\n      </div>\n      </Link>\n    </div>\n  )\n}\n\nexport default JobCard\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction Login({onLogin}) {\n    const [name, setName] = useState('')\n    const [password, setPassword] = useState('')\n\n    function handleSubmit(e){\n        e.preventDefault();\n        fetch('/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({name, password})\n        })\n        .then((r) => r.json())\n        .then((company) => onLogin(company))\n    }\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n      <h3>Login</h3>\n      <label htmlFor=\"username\">Username: </label>\n        <input \n        type='text'\n        id=\"name\"\n        autoComplete='off'\n        value={name}\n        onChange={(e) => setName(e.target.value)}/>\n\n<label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"current-password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <button type='submit'>Sign in</button>\n      </form>\n    </div>\n  )\n}\n\nexport default Login\n\n","import React, {useState, useEffect} from 'react'\nimport JobCard from './JobCard'\nimport Login from './Login'\n\nfunction JobList() {\n    const [jobs, setJobs] = useState([])\n\n  useEffect(() => {\n    fetch('/jobs')\n    .then((r) => r.json())\n    .then((data) => setJobs(data))\n  }, [])\n\n  return (\n    <div className='JobList'>\n    <ul className='Jobs'>\n      {jobs.map((job) => (\n      <JobCard key={job.id} job={job}/>\n      ))}\n      </ul>\n      </div>\n  )\n}\n\nexport default JobList\n","import React, { useEffect, useState } from 'react'\nimport Login from './Login';\n\nfunction CompanyLogin() {\n    const [company, setCompany] = useState(null)\n\n    useEffect(() => {\n        fetch('/me').then((response) => {\n            if(response.ok){\n                response.json().then((company) => setCompany(company))\n            }\n        })\n    }, []);\n\n    if (company){\n        return <h2>Welcome, {company.name}!</h2>\n    } else {\n        return <Login onLogin={setCompany} />\n    }\n  \n}\n\nexport default CompanyLogin\n","import React from 'react'\n\nfunction SignInWall() {\n  return (\n    <article>\n    <h2>Sign In</h2>\n    <p>\n      Login To View The Jobs\n    </p>\n  </article>\n  )\n}\n\nexport default SignInWall\n","import React, {useState, useEffect} from 'react'\nimport Company from './Company';\nimport { useParams } from 'react-router-dom';\nimport SignInWall from './SignInWall';\nimport { Link } from 'react-router-dom';\n\n\nconst initialState = {\n    job: null,\n    error: null,\n    status: \"pending\",\n  };\n\nfunction Job() {\n    const [{ job, error, status }, setState] = useState(initialState);\n  const { id } = useParams();\n\n  useEffect(() => {\n    setState(initialState);\n    fetch(`/jobs/${id}`).then((r) => {\n      if (r.ok) {\n        r.json().then((job) =>\n          setState({ job, error: null, status: \"resolved\" })\n        );\n      } else {\n        r.json().then((message) =>\n          setState({ job: null, error: message.error, status: \"rejected\" })\n        );\n      }\n    });\n  }, [id]);\n\n  if (status === \"pending\") return <h1>Loading...</h1>;\n\n  if (status === \"rejected\") {\n    if (error === \"Login\") {\n      return <SignInWall />;\n    } else {\n      return <h1>{error}</h1>;\n    }\n  }\n\n  const {\n    name,\n    location,\n    level,\n    salary,\n    featured,\n    languages,\n    contract,\n    posted_at,\n    companys\n} = job\n\nconst tags = [level, ...languages];\n\n//const { website} = companys\n\n  return (\n    <div>\n    <article>\n    <h1>{name}</h1>\n      <small>\n        <p>\n          {posted_at} • {location} {salary} {level}\n        </p>\n        <p>\n          <em>{tags.map((tag) => {\n            <li>{tag}</li>\n          })}</em>\n        </p>\n      </small>\n      <p>{contract}</p>\n      <Link exact to='/login'><button>Company</button></Link>\n      <Link exact to ='/login'><button>Edit Job</button></Link>\n      <Link exact to ='/login'><button>Add Job</button></Link>\n      <Link exact to ='/login'><button>Delete Job</button></Link>\n    </article>\n    </div>\n  )\n}\n\nexport default Job","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction Header({ company, onLogout }) {\n    function handleLogout() {\n      fetch(\"/logout\", {\n        method: \"DELETE\",\n      }).then(() => onLogout());\n    }\n  \n    return (\n      <header>\n        <div>\n        <h1>\n          <Link to=\"/\">Code Jobs</Link>\n        </h1>\n        {company ? (\n          <div>\n            <button onClick={handleLogout}>Logout</button>\n          </div>\n        ) : (\n            <section>\n          <Link to=\"/login\"><button>Click Here to Login</button></Link>\n          <Link to=\"/signup\"><button>Click Here to SignUp</button></Link>\n          </section>\n        )}\n        </div>\n      </header>\n    );\n  }\n  \n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nfunction JobItem({job}) {\n    const {\n        name,\n        location,\n        level,\n        salary,\n        featured,\n        languages,\n        contract,\n        posted_at,\n        companys\n    } = job\n\n    const tags = [level, ...languages];\n\n  return (\n    <article>\n    <h1>{name}</h1>\n      <small>\n        <p>\n          {posted_at} • {location} {salary} {level} {companys.name}\n        </p>\n        <p>\n          <em>{tags.map((tag) => {\n            <li>{tag}</li>\n          })}</em>\n        </p>\n      </small>\n      <p>{contract}</p>\n      <Link exact to='/me'><button>Company</button></Link>\n      <Link exact to ='/login'><button>Edit Job</button></Link>\n      <Link exact to ='/members'><button>Add Job</button></Link>\n      <Link exact to ='/login'><button>Delete Job</button></Link>\n    </article>\n  )\n}\n\nexport default JobItem\n","import React from 'react'\nimport { useEffect, useState } from \"react\";\nimport JobItem from './JobItem';\n\nconst initialState = {\n    jobs: null,\n    error: null,\n    status: \"pending\",\n  };\n\nfunction Members() {\n    const [{ jobs, error, status }, setState] = useState(initialState);\n  \n    useEffect(() => {\n      setState(initialState);\n      fetch('/members').then((r) => {\n        if (r.ok) {\n          r.json().then((jobs) =>\n            setState({ jobs, error: null, status: \"resolved\" })\n          );\n        } else {\n          r.json().then((message) =>\n            setState({ jobs: null, error: message.error, status: \"rejected\" })\n          );\n        }\n      });\n    }, []);\n\n    if (status === \"pending\") return <h1>Loading...</h1>;\n\n    if (status === \"rejected\") return <h1>{error}</h1>;\n\n  return (\n    <main>\n    <h2>Member Only Jobs</h2>\n    {jobs.map((job) => (\n      <JobItem key={job.id} job={job} />\n    ))}\n  </main>\n  )\n}\n\nexport default Members\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\n\nfunction JobForm() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    location:'',\n    level: \"\",\n    salary: \"\",\n    languages: [],\n    contract: \"\",\n    posted_at: \"\",\n    featured: false,\n    posted_at: ''\n  });\n\n  function handleSubmit(e){\n    e.preventDefault();\n    fetch('/members', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(formData)\n    })\n    .then((response) => response.json())\n    .then((newJob) => console.log(newJob))\n  }\n\n  \n\n  function handleChange(e) {\n    const value =\n      e.target.type === \"checkbox\" ? e.target.checked : e.target.value;\n    setFormData({\n      ...formData,\n      [e.target.id]: value,\n    });\n  }\n\n  return (\n    <Wrapper>\n      <form onSubmit={handleSubmit}>\n        <FormGroup>\n          <label htmlFor=\"name\">name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label htmlFor=\"location\">Location</label>\n          <input\n            type=\"text\"\n            id=\"location\"\n            value={formData.location}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label htmlFor=\"level\">Level</label>\n          <input\n            type=\"text\"\n            id=\"level\"\n            value={formData.level}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label htmlFor=\"\">Salary</label>\n          <input\n            type=\"text\"\n            id=\"salary\"\n            value={formData.salary}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label htmlFor=\"languages\">Languages</label>\n          <textarea\n            id=\"languages\"\n            value={formData.languages}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label htmlFor=\"contract\">Contract</label>\n          <input\n            type=\"text\"\n            id=\"contract\"\n            value={formData.contract}\n            onChange={handleChange}\n          />\n        </FormGroup>\n        <FormGroup>\n          <label htmlFor=\"featured\">\n            Featured?\n            <input\n              type=\"checkbox\"\n              id=\"featured\"\n              checked={formData.featured}\n              onChange={handleChange}\n            />\n          </label>\n        </FormGroup>\n        <SubmitButton type=\"submit\">Add Job</SubmitButton>\n      </form>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.section`\n  max-width: 500px;\n  margin: 32px auto;\n  padding: 32px;\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n`;\n\nconst SubmitButton = styled.button`\n  background: blue;\n  color: yellow;\n  font-weight: bold;\n  font-family: inherit;\n  font-size: 1.2rem;\n  border: none;\n  padding: 8px 16px;\n  cursor: pointer;\n`;\n\n\nexport default JobForm;\n","import React, { useState } from \"react\";\n\nfunction SignUp({ setCompany }) {\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        name,\n        password,\n        password_confirmation: passwordConfirmation,\n      }),\n    }).then((r) => {\n      if (r.ok) {\n        r.json().then((company) => setCompany(company));\n      }\n    });\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Sign Up</h1>\n        <label htmlFor=\"name\">Username</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n        <label htmlFor=\"password\">Password Confirmation</label>\n        <input\n          type=\"password\"\n          id=\"password_confirmation\"\n          value={passwordConfirmation}\n          onChange={(e) => setPasswordConfirmation(e.target.value)}\n          autoComplete=\"current-password\"\n        />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    </div>\n  );\n}\n\nexport default SignUp;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport { BrowserRouter, Routes, Route} from 'react-router-dom';\nimport JobList from './JobList';\nimport CompanyLogin from './CompanyLogin';\nimport Login from './Login';\nimport Job from './Job';\nimport Header from './Header';\nimport Members from './Members';\nimport JobForm from './JobForm';\nimport SignUp from './SignUp';\nimport JobCard from './JobCard';\n\n\nfunction App() {\n  const [company, setCompany] = useState(null)\n\n    useEffect(() => {\n        fetch('/me').then((response) => {\n            if(response.ok){\n                response.json().then((company) => setCompany(company))\n            }\n        })\n    }, []);\n\n    function handleLogin(company){\n      setCompany(company)\n    }\n\n    function handleLogout(){\n      setCompany(null)\n    }\n\n  return (\n    <div className='App'>\n      <Header company={company} onLogout={handleLogout} />\n      <main>\n        {company ? (\n    <Routes>\n      <Route exact path='/members' \n      element={<Members/>}> \n      </Route >\n      </Routes>\n        ): (\n          <Routes>\n      <Route exact path='/login' element={<Login onLogin={handleLogin} />}> </Route >\n      <Route exact path='/jobs/:id' element={<Job />}> </Route >\n      <Route exact path='/new' element={<JobForm />}></Route>\n      <Route exact path='/signup' element={<SignUp setCompany={setCompany}/>}></Route>\n      <Route exact path='/' element={ <JobList/> }></Route>\n      <Route exact path='/me' element={ <CompanyLogin />}></Route>\n      \n    </Routes>\n        )}\n    </main>\n    </div>\n  )\n  \n}\n\nexport default App;\n\n//<Route exact path='/me' element={<CompanyLogin />}></Route>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/main.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: 'Roboto', sans-serif;\n  }\n\n  html, body {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n  <GlobalStyle />\n   <App />\n</BrowserRouter>,\ndocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}